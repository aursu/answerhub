Deployment With Tomcat

The description below uses the variable name $CATALINA_BASE to refer the base
directory against which most relative paths are resolved. If you have not
configured Tomcat for multiple instances by setting a CATALINA_BASE directory,
then $CATALINA_BASE will be set to the value of $CATALINA_HOME, the directory
into which you have installed Tomcat.

In order to be executed, a web application must be deployed on a servlet
container. This is true even during development. We will describe using Tomcat
to provide the execution environment. A web application can be deployed in
Tomcat by one of the following approaches:

Copy unpacked directory hierarchy into a subdirectory in directory
$CATALINA_BASE/webapps/. Tomcat will assign a context path to your application
based on the subdirectory name you choose. We will use this technique in the
build.xml file that we construct, because it is the quickest and easiest
approach during development. Be sure to restart Tomcat after installing or
updating your application. 

Copy the web application archive file into directory $CATALINA_BASE/webapps/.
When Tomcat is started, it will automatically expand the web application
archive file into its unpacked form, and execute the application that way. This
approach would typically be used to install an additional application, provided
by a third party vendor or by your internal development staff, into an existing
Tomcat installation. NOTE - If you use this approach, and wish to update your
application later, you must both replace the web application archive file AND
delete the expanded directory that Tomcat created, and then restart Tomcat, in
order to reflect your changes. 

Use the Tomcat "Manager" web application to deploy and undeploy web
applications. Tomcat includes a web application, deployed by default on context
path /manager, that allows you to deploy and undeploy applications on a running
Tomcat server without restarting it. See [Manager App HOW-TO](https://tomcat.apache.org/tomcat-7.0-doc/manager-howto.html)
for more information on using the Manager web application.

Use "Manager" Ant Tasks In Your Build Script. Tomcat includes a set of custom
task definitions for the Ant build tool that allow you to automate the
execution of commands to the "Manager" web application. These tasks are used in
the Tomcat deployer. 

Use the Tomcat Deployer. Tomcat includes a packaged tool bundling the Ant tasks,
and can be used to automatically precompile JSPs which are part of the web
application before deployment to the server. 

Deploying your app on other servlet containers will be specific to each
container, but all containers compatible with the Servlet API Specification
(version 2.2 or later) are required to accept a web application archive file.
Note that other containers are NOT required to accept an unpacked directory
structure (as Tomcat does), or to provide mechanisms for shared library files,
but these features are commonly available.
